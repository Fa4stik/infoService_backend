datasource db {
  provider = "mongodb"
  url = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model TypeOfProject {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String @unique
  projects Project[]
}

model Project {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String @unique
  logoSrc String
  shortDesc String
  linkSsl String?
  linkNoSsl String?
  projectSectionIDs String[] @db.ObjectId
  projectSections ProjectSection[] @relation(fields: [projectSectionIDs], references: [id])
  projectSectionContent ProjectSectionContent[]
  userIDs String[] @db.ObjectId
  users User[] @relation(fields: [userIDs], references: [id])
  photos Gallery[]
  typeOfProjectId String @db.ObjectId
  typeOfProject TypeOfProject @relation(fields: [typeOfProjectId], references: [id])
}

model ProjectSection {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String @unique
  alt String @default("Описание секции")
  projectIDs String[] @db.ObjectId
  projects Project[] @relation(fields: [projectIDs], references: [id])
  projectSectionContent ProjectSectionContent[]
}

model ProjectSectionContent {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  projectId String @db.ObjectId
  project Project @relation(fields: [projectId], references: [id])
  projectSectionId String @db.ObjectId
  projectSection ProjectSection @relation(fields: [projectSectionId], references: [id])
  content String

  @@unique([projectId, projectSectionId])
}

model User {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  login String @unique
  email String @unique
  password String
  projectIDs String[] @db.ObjectId
  projects Project[] @relation(fields: [projectIDs], references: [id])
  token Token?
  resetLink ResetLink?
  role Role @default(USER)
}

model ResetLink {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  userId String @db.ObjectId @unique
  user User @relation(fields: [userId], references: [id])
}

model Token {
  userId String @db.ObjectId @id @map("_id")
  user User @relation(fields: [userId], references: [id])
  refreshToken String
}

model Gallery {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  projectId String @db.ObjectId
  project Project @relation(fields: [projectId], references: [id])
  alt String
  src String @unique
}

enum Role {
  USER
  ADMIN
}